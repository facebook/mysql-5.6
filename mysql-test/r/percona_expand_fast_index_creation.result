SET expand_fast_index_creation=ON;
CREATE TABLE idx (a INT PRIMARY KEY);
CREATE TABLE t (a INT PRIMARY KEY AUTO_INCREMENT, b FLOAT, c VARCHAR(15), d VARCHAR(17), z VARCHAR(1)) ENGINE=InnoDB;
INSERT INTO t (b) VALUES (RAND());
INSERT INTO t (b) SELECT RAND() FROM t;
INSERT INTO t (b) SELECT RAND() FROM t;
INSERT INTO t (b) SELECT RAND() FROM t;
INSERT INTO t (b) SELECT RAND() FROM t;
INSERT INTO t (b) SELECT RAND() FROM t;
INSERT INTO t (b) SELECT RAND() FROM t;
INSERT INTO t (b) SELECT RAND() FROM t;
ALTER TABLE t ADD KEY k1(b), ADD KEY k2(a,b), ADD KEY k3(a,b,d), ADD UNIQUE KEY k4(a,c,d);
INSERT INTO idx (a) SELECT i.INDEX_ID FROM
INFORMATION_SCHEMA.INNODB_SYS_INDEXES i,
INFORMATION_SCHEMA.INNODB_SYS_TABLES t
WHERE
t.NAME = 'test/t' AND i.TABLE_ID = t.TABLE_ID;
SELECT i.NAME, i.TYPE, i.N_FIELDS, f.NAME, f.POS FROM
INFORMATION_SCHEMA.INNODB_SYS_FIELDS f,
INFORMATION_SCHEMA.INNODB_SYS_INDEXES i,
INFORMATION_SCHEMA.INNODB_SYS_TABLES t
WHERE
t.NAME = 'test/t' AND i.TABLE_ID = t.TABLE_ID AND
f.INDEX_ID = i.INDEX_ID
ORDER BY
i.NAME, f.NAME;
NAME	TYPE	N_FIELDS	NAME	POS
k1	0	1	b	0
k2	0	2	a	0
k2	0	2	b	1
k3	0	3	a	0
k3	0	3	b	1
k3	0	3	d	2
k4	2	3	a	0
k4	2	3	c	1
k4	2	3	d	2
PRIMARY	3	1	a	0
SET profiling=1;
Warnings:
Warning	1287	'@@profiling' is deprecated and will be removed in a future release.
ALTER TABLE t MODIFY COLUMN z VARCHAR(2);
SET profiling=0;
Warnings:
Warning	1287	'@@profiling' is deprecated and will be removed in a future release.
SELECT COUNT(*) FROM INFORMATION_SCHEMA.PROFILING
WHERE STATE = 'restoring secondary keys' AND
QUERY_ID = (SELECT MAX(QUERY_ID) FROM INFORMATION_SCHEMA.PROFILING);
COUNT(*)
1
INSERT INTO idx (a) SELECT i.INDEX_ID FROM
INFORMATION_SCHEMA.INNODB_SYS_INDEXES i,
INFORMATION_SCHEMA.INNODB_SYS_TABLES t
WHERE
t.NAME = 'test/t' AND i.TABLE_ID = t.TABLE_ID;
SET profiling=1;
Warnings:
Warning	1287	'@@profiling' is deprecated and will be removed in a future release.
SELECT i.NAME, i.TYPE, i.N_FIELDS, f.NAME, f.POS FROM
INFORMATION_SCHEMA.INNODB_SYS_FIELDS f,
INFORMATION_SCHEMA.INNODB_SYS_INDEXES i,
INFORMATION_SCHEMA.INNODB_SYS_TABLES t
WHERE
t.NAME = 'test/t' AND i.TABLE_ID = t.TABLE_ID AND
f.INDEX_ID = i.INDEX_ID
ORDER BY
i.NAME, f.NAME;
NAME	TYPE	N_FIELDS	NAME	POS
k1	0	1	b	0
k2	0	2	a	0
k2	0	2	b	1
k3	0	3	a	0
k3	0	3	b	1
k3	0	3	d	2
k4	2	3	a	0
k4	2	3	c	1
k4	2	3	d	2
PRIMARY	3	1	a	0
SELECT COUNT(DISTINCT a) FROM idx;
COUNT(DISTINCT a)
10
DROP TABLE idx;
DROP TABLE t;
CREATE TABLE t_assert(a INT NOT NULL, b CHAR(1), id INT NOT NULL, KEY(a), KEY(id)) ENGINE=INNODB;
ALTER TABLE t_assert CHANGE COLUMN b b CHAR(1) NOT NULL;
DROP TABLE t_assert;
CREATE TABLE t_assert(a INT, b INT, key(a,b)) ENGINE=MEMORY;
ALTER TABLE t_assert ENGINE=INNODB;
ALTER TABLE t_assert ADD c INT;
DROP TABLE t_assert;
CREATE TEMPORARY TABLE t_assert(a INT, b INT, key(a,b)) ENGINE=MEMORY;
ALTER TABLE t_assert ENGINE=INNODB;
ALTER TABLE t_assert ADD c INT;
DROP TABLE t_assert;
