create table gaplocktest
(
id int not null,
value varchar(255),
primary key (id)
) engine=innodb;
insert into gaplocktest values (0, '0');
insert into gaplocktest values (25, '25');
insert into gaplocktest values (50, '50');
insert into gaplocktest values (75, '75');
insert into gaplocktest values (100, '100');
set_gaplock_query_monitor(logfilename='/tmp/gapquery.log', set=1, enable=1, verbose=0)
set global innodb_monitor_gaplock_query_print_verbose = 0;
show variables like '%innodb_monitor_gaplock_query_print_verbose%';
Variable_name	Value
innodb_monitor_gaplock_query_print_verbose	OFF
'setting gap lock query log to '/tmp/gapquery.log''
set global innodb_monitor_gaplock_query_filename= '/tmp/gapquery.log';
show variables like 'innodb_monitor_gaplock_query_filename';
Variable_name	Value
innodb_monitor_gaplock_query_filename	/tmp/gapquery.log
'enabling gap lock query logging'
set global innodb_monitor_gaplock_query= true;
show variables like 'innodb_monitor_gaplock_query';
Variable_name	Value
innodb_monitor_gaplock_query	ON
"monitor_gaplock_query_test()"
set transaction isolation level repeatable read;
start transaction;
select "test non gap lock select, insert and update";
test non gap lock select, insert and update
test non gap lock select, insert and update
select * from gaplocktest;
id	value
0	0
25	25
50	50
75	75
100	100
insert into gaplocktest values(101, '101');
update gaplocktest set value='updated 0' where id=0;
rollback;
set transaction isolation level repeatable read;
start transaction;
select * from gaplocktest where id < 25 for update;
id	value
0	0
select * from gaplocktest where id < 50 lock in share mode;
id	value
0	0
25	25
select * from gaplocktest where id = 100 for update;
id	value
100	100
select * from gaplocktest where id = 99 for update;
id	value
update gaplocktest set value = '7575' where id = 75;
set transaction isolation level repeatable read;
start transaction;
set innodb_lock_wait_timeout=1;
insert into gaplocktest values (51, '51');
update gaplocktest set value = '7575' where id = 75;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
delete from gaplocktest where id = 75;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
rollback;
start transaction;
insert into gaplocktest values (1, '1');
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
update gaplocktest set value = '2525' where id = 25;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
update gaplocktest set value = '7575' where id = 75;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
update gaplocktest set value = '2626' where id = 26;
delete from gaplocktest where id = 25;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
rollback;
insert into gaplocktest values (1, '1');
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
update gaplocktest set value = '2525' where id = 25;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
delete from gaplocktest where id = 25;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
start transaction;
select * from gaplocktest where id > 100 for update;
id	value
select * from gaplocktest where id > 40 for update;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
rollback;
rollback;
set_gaplock_query_monitor(logfilename=, set=0, enable=0, verbose=0)
set global innodb_monitor_gaplock_query_print_verbose = 0;
show variables like '%innodb_monitor_gaplock_query_print_verbose%';
Variable_name	Value
innodb_monitor_gaplock_query_print_verbose	OFF
'disabling gap lock query logging'
set global innodb_monitor_gaplock_query= false;
show variables like 'innodb_monitor_gaplock_query';
Variable_name	Value
innodb_monitor_gaplock_query	OFF
"monitor_gaplock_query_test()"
set transaction isolation level repeatable read;
start transaction;
select "test non gap lock select, insert and update";
test non gap lock select, insert and update
test non gap lock select, insert and update
select * from gaplocktest;
id	value
0	0
25	25
50	50
75	75
100	100
insert into gaplocktest values(101, '101');
update gaplocktest set value='updated 0' where id=0;
rollback;
set transaction isolation level repeatable read;
start transaction;
select * from gaplocktest where id < 25 for update;
id	value
0	0
select * from gaplocktest where id < 50 lock in share mode;
id	value
0	0
25	25
select * from gaplocktest where id = 100 for update;
id	value
100	100
select * from gaplocktest where id = 99 for update;
id	value
update gaplocktest set value = '7575' where id = 75;
set transaction isolation level repeatable read;
start transaction;
set innodb_lock_wait_timeout=1;
insert into gaplocktest values (51, '51');
update gaplocktest set value = '7575' where id = 75;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
delete from gaplocktest where id = 75;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
rollback;
start transaction;
insert into gaplocktest values (1, '1');
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
update gaplocktest set value = '2525' where id = 25;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
update gaplocktest set value = '7575' where id = 75;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
update gaplocktest set value = '2626' where id = 26;
delete from gaplocktest where id = 25;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
rollback;
insert into gaplocktest values (1, '1');
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
update gaplocktest set value = '2525' where id = 25;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
delete from gaplocktest where id = 25;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
start transaction;
select * from gaplocktest where id > 100 for update;
id	value
select * from gaplocktest where id > 40 for update;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
rollback;
rollback;
set_gaplock_query_monitor(logfilename='/tmp/verbosegapquery.log', set=1, enable=1, verbose=1)
set global innodb_monitor_gaplock_query_print_verbose = 1;
show variables like '%innodb_monitor_gaplock_query_print_verbose%';
Variable_name	Value
innodb_monitor_gaplock_query_print_verbose	ON
'setting gap lock query log to '/tmp/verbosegapquery.log''
set global innodb_monitor_gaplock_query_filename= '/tmp/verbosegapquery.log';
show variables like 'innodb_monitor_gaplock_query_filename';
Variable_name	Value
innodb_monitor_gaplock_query_filename	/tmp/verbosegapquery.log
'enabling gap lock query logging'
set global innodb_monitor_gaplock_query= true;
show variables like 'innodb_monitor_gaplock_query';
Variable_name	Value
innodb_monitor_gaplock_query	ON
"monitor_gaplock_query_test()"
set transaction isolation level repeatable read;
start transaction;
select "test non gap lock select, insert and update";
test non gap lock select, insert and update
test non gap lock select, insert and update
select * from gaplocktest;
id	value
0	0
25	25
50	50
75	75
100	100
insert into gaplocktest values(101, '101');
update gaplocktest set value='updated 0' where id=0;
rollback;
set transaction isolation level repeatable read;
start transaction;
select * from gaplocktest where id < 25 for update;
id	value
0	0
select * from gaplocktest where id < 50 lock in share mode;
id	value
0	0
25	25
select * from gaplocktest where id = 100 for update;
id	value
100	100
select * from gaplocktest where id = 99 for update;
id	value
update gaplocktest set value = '7575' where id = 75;
set transaction isolation level repeatable read;
start transaction;
set innodb_lock_wait_timeout=1;
insert into gaplocktest values (51, '51');
update gaplocktest set value = '7575' where id = 75;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
delete from gaplocktest where id = 75;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
rollback;
start transaction;
insert into gaplocktest values (1, '1');
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
update gaplocktest set value = '2525' where id = 25;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
update gaplocktest set value = '7575' where id = 75;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
update gaplocktest set value = '2626' where id = 26;
delete from gaplocktest where id = 25;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
rollback;
insert into gaplocktest values (1, '1');
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
update gaplocktest set value = '2525' where id = 25;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
delete from gaplocktest where id = 25;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
start transaction;
select * from gaplocktest where id > 100 for update;
id	value
select * from gaplocktest where id > 40 for update;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
rollback;
rollback;
set_gaplock_query_monitor(logfilename='', set=1, enable=0, verbose=0)
set global innodb_monitor_gaplock_query_print_verbose = 0;
show variables like '%innodb_monitor_gaplock_query_print_verbose%';
Variable_name	Value
innodb_monitor_gaplock_query_print_verbose	OFF
'setting gap lock query log to '''
set global innodb_monitor_gaplock_query_filename= '';
show variables like 'innodb_monitor_gaplock_query_filename';
Variable_name	Value
innodb_monitor_gaplock_query_filename	
'disabling gap lock query logging'
set global innodb_monitor_gaplock_query= false;
show variables like 'innodb_monitor_gaplock_query';
Variable_name	Value
innodb_monitor_gaplock_query	OFF
"'/tmp/gapquery.log' contents"
select * from gaplocktest where id < 25 for update 
select * from gaplocktest where id < 50 lock in share mode 
select * from gaplocktest where id = 99 for update 
insert into gaplocktest values (1, '1') 
update gaplocktest set value = '2626' where id = 26 
insert into gaplocktest values (1, '1') 
select * from gaplocktest where id > 100 for update 
select * from gaplocktest where id > 40 for update 
"'/tmp/verbosegapquery.log' contents excluding query"
53
drop table gaplocktest;
