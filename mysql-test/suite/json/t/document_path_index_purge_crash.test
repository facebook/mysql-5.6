# Runs recovery of purge thread on docstore table by introducing crashes
# at specific code places.

source include/have_debug.inc;
source include/have_innodb.inc;
source include/big_test.inc;
# memory leaks will occur with valgrind
source include/not_valgrind.inc;

call mtr.add_suppression("Resizing redo log from");
call mtr.add_suppression("Starting to delete and rewrite log files");
call mtr.add_suppression("New log files created");

create table t1(a int, doc document, primary key (a), key(doc.id as int)) engine=innodb;
insert into t1 values (1, concat("{", repeat("\"json-key\":\"json-value\",", 6700), "\"id\":100}"));
let $old_debug = `select @@debug`;
exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect;
# Let purge finish processing any undo log records before
# setting the debug flag for its crash. Purge runs in background and there
# is no easy way to control its behavior directly, so using a sleep here.
--real_sleep 5
# Set crash after removal of clustered index record when processing
# undo log created by delete. During recovery purge skips the undo log since
# the clustered index record is no longer present.
set global debug="+d,crash_purge_del_after_remove_clust";
error 0, 2013;
delete from t1 where a=1;
source include/wait_until_disconnected.inc;
enable_reconnect;
source include/wait_until_connected_again.inc;
disable_reconnect;

# Set crash after freeing external pages but before removing
# the clustered index record. During recovery purge will skip
# reading the freed external pages and thus skip any purge
# on secondary index. Note the purge on secondary index
# was successful before the crash.
insert into t1 values (1, concat("{", repeat("\"json-key\":\"json-value\",", 6700), "\"id\":100}"));
eval set global debug = '$old_debug';
exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect;
--real_sleep 5
set global debug="+d,crash_purge_del_after_free_extern";
error 0, 2013;
delete from t1 where a=1;
source include/wait_until_disconnected.inc;
enable_reconnect;
source include/wait_until_connected_again.inc;
disable_reconnect;

# Set crash while freeing external pages when processing undo log
# created by delete. During recovery purge will skip reading the
# half-deleted external pages and thus skip any purge on
# secondary index. Note the purge on secondary index was
# successful before the crash.
insert into t1 values (1, concat("{", repeat("\"json-key\":\"json-value\",", 6700), "\"id\":100}"));
eval set global debug = '$old_debug';
exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect;
--real_sleep 5
set global debug="+d,crash_freeing_external_pages";
error 0, 2013;
delete from t1 where a=1;
source include/wait_until_disconnected.inc;
enable_reconnect;
source include/wait_until_connected_again.inc;
disable_reconnect;

# Set crash after freeing external pages when processing undo log
# created by update of delete marked record. During recovery purge
# will skip reading the freed external pages and thus skip any
# purge on secondary index. Note the purge on secondary index
# was successful before the crash.
insert into t1 values (2, concat("{", repeat("\"json-key\":\"json-value\",", 6700), "\"id\":100}"));
eval set global debug = '$old_debug';
exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect;
--real_sleep 5
set global debug="+d,crash_after_purge_upd";
error 0, 2013;
update t1 set doc=concat("{", repeat("\"json-key\":\"json-value\",", 6700), "\"id\":200}") where a=2;
source include/wait_until_disconnected.inc;
enable_reconnect;
exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect;
source include/wait_until_connected_again.inc;
disable_reconnect;

# Set crash while freeing external pages when processing undo log
# created by update of delete marked record. During recovery purge
# will skip reading the half-deleted external pages and thus skip
# any purge on secondary index. Note the purge on secondary index
# was successful before the crash.
eval set global debug = '$old_debug';
exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect;
--real_sleep 5
set global debug="+d,crash_freeing_external_pages";
error 0, 2013;
update t1 set doc=concat("{", repeat("\"json-key\":\"json-value\",", 6700), "\"id\":300}") where a=2;
source include/wait_until_disconnected.inc;
enable_reconnect;
source include/wait_until_connected_again.inc;
disable_reconnect;
select * from information_schema.innodb_sys_docstore_fields;
eval set global debug="$old_debug";
drop table t1;
