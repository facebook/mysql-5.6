###
### Test of document path indexing of document type
###

--disable_warnings
drop table if exists t1, t2, t3, t4;
--enable_warnings


################################################################################
###
### t1 : only one index key with only one document path key part
###


## Indexing on a document field directly is not allowed
--error ER_DOCUMENT_KEY_NOT_SUPPORTED
CREATE TABLE t1 (
       a int not null,
       doc document not null,
       primary key (a),
       key (doc)) engine=innodb;


## The prefix length must be specified when indexing on a document path as string
--error 1064
CREATE TABLE t1 (
       a int not null,
       b char (10) not null,
       doc document not null,
       primary key (a),
       key (doc.id as int),
       key (doc.name as string)) engine=innodb;


## The prefix length must be specified when indexing on a document path as binary
--error 1064
CREATE TABLE t1 (
       a int not null,
       b char (10) not null,
       doc document not null,
       primary key (a),
       key (doc.id as int),
       key (doc.address as binary)) engine=innodb;


### Only one index key with only one document path key part
CREATE TABLE t1 (
       a int not null,
       b int,
       c char (10),
       doc document not null,
       primary key (a),
       UNIQUE key b_a (b, a),
       UNIQUE key c_doc (c, doc.address.zipcode as int)
) engine=innodb;


--replace_column 7 -
SHOW INDEXES IN t1;

insert into t1 values (1,10,'@1','{ "id":101, "name":"Alex", "phone":6507770001, "address":{ "houseNumber":1001, "streetName":"1st", "zipcode":98761 }, "bool":"True", "a.b.c.":1 }');
insert into t1 values (2,20,'@2','{ "id":102, "name":"Bob", "phone":6507770002, "address":{ "houseNumber":1002, "streetName":"2nd", "zipcode":98762 }, "int64":2222222220123456789, "a.b.c.":2 }');
insert into t1 values (3,30,'@3','{ "id":103, "name":"Charlie", "phone":6507770003, "address":{ "houseNumber":1003, "streetName":"3rd", "zipcode":98763 }, "double":3.333333, "a.b.c.":3 }');
insert into t1 values (4,40,'@4','{ "id":104, "name":"Don", "phone":6507770004, "address":{ "houseNumber":1004, "streetName":"4th", "zipcode":98764 }, "Children":["Alex", "Bob", "Charlei"], "a.b.c.":4 }');

--replace_column 7 -
SHOW INDEXES IN t1;

SELECT * FROM t1;

ALTER TABLE t1 DROP KEY b_a;

--replace_column 7 -
SHOW INDEXES IN t1;

SELECT * FROM t1;

ALTER TABLE t1 DROP KEY c_doc;

--replace_column 7 -
SHOW INDEXES IN t1;

SELECT * FROM t1;


################################################################################
###
### t2 : multiple keys each of which has only one document path key part
###


CREATE TABLE t2 (
       a int not null,
       b char (10) not null,
       doc document not null,
       primary key (a),
       key (doc.id as int),
       key (doc.double as double),
       key doc_bool (doc.bool as bool),
       key (doc.name as string(64)),
       key doc_name_100 (doc.name as string(100)),
       key doc_binary (doc.address as binary(64)),
       key (doc.address as binary(100))) engine=innodb;

--replace_column 7 -
SHOW INDEXES IN t2;

insert into t2 values (1,'@1','{ "id":101, "name":"Alex", "phone":6507770001, "address":{ "houseNumber":1001, "streetName":"1st", "zipcode":98761 }, "bool":"True" }');
insert into t2 values (2,'@2','{ "id":102, "name":"Bob", "phone":6507770002, "address":{ "houseNumber":1002, "streetName":"2nd", "zipcode":98762 }, "int64":2222222220123456789 }');
insert into t2 values (3,'@3','{ "id":103, "name":"Charlie", "phone":6507770003, "address":{ "houseNumber":1003, "streetName":"3rd", "zipcode":98763 }, "double":3.333333 }');
insert into t2 values (4,'@4','{ "id":104, "name":"Don", "phone":6507770004, "address":{ "houseNumber":1004, "streetName":"4th", "zipcode":98764 }, "Children":["Alex", "Bob", "Charlei"] }');

--replace_column 7 -
SHOW INDEXES IN t2;

ALTER TABLE t2 DROP KEY doc_bool;

--replace_column 7 -
SHOW INDEXES IN t2;

ALTER TABLE t2 DROP KEY doc_name_100;

--replace_column 7 -
SHOW INDEXES IN t2;

ALTER TABLE t2 DROP KEY doc_binary;

--replace_column 7 -
SHOW INDEXES IN t2;


################################################################################
###
### t3 : create an index with only one document path key part on an existing table
###


CREATE TABLE t3 (
       a int not null,
       b int,
       c char (10),
       doc document not null,
       primary key (a),
       UNIQUE key b_a (b, a)
) engine=innodb;

--replace_column 7 -
SHOW INDEXES IN t3;

insert into t3 values (1,10,'@1','{ "id":101, "name":"Alex", "phone":6507770001, "address":{ "houseNumber":1001, "streetName":"1st", "zipcode":98761 }, "bool":"True", "a.b.c.":1 }');
insert into t3 values (2,20,'@2','{ "id":102, "name":"Bob", "phone":6507770002, "address":{ "houseNumber":1002, "streetName":"2nd", "zipcode":98762 }, "int64":2222222220123456789, "a.b.c.":2 }');
insert into t3 values (3,30,'@3','{ "id":103, "name":"Charlie", "phone":6507770003, "address":{ "houseNumber":1003, "streetName":"3rd", "zipcode":98763 }, "double":3.333333, "a.b.c.":3 }');
insert into t3 values (4,40,'@4','{ "id":104, "name":"Don", "phone":6507770004, "address":{ "houseNumber":1004, "streetName":"4th", "zipcode":98764 }, "Children":["Alex", "Bob", "Charlei"], "a.b.c.":4 }');

SELECT * FROM t3;

CREATE UNIQUE INDEX c_doc ON t3 (c, doc.address.zipcode as int);

--replace_column 7 -
SHOW INDEXES IN t3;

SELECT * FROM t3;

ALTER TABLE t3 DROP KEY b_a;

--replace_column 7 -
SHOW INDEXES IN t3;

ALTER TABLE t3 DROP KEY c_doc;

--replace_column 7 -
SHOW INDEXES IN t3;

SELECT * FROM t3;


################################################################################
###
### TODO:
###
### t4 : multiple keys each of which has multiple document path key parts
###


--error ER_DUP_FIELDNAME
CREATE TABLE t4 (
       a int not null,
       b char (10) not null,
       doc document not null,
       primary key (a),
       key id_a_double_b_bool (doc.id as int, a, doc.double as double, b, doc.bool as bool),
       key a_name_b_name100_address_a_address100_b (a, doc.name as string(64), b, doc.name as string(100), doc.address as binary(64), a, doc.address as binary(100), b)) engine=innodb;


################################################################################
###
### clean up
###


drop table t1, t2, t3;