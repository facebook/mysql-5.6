--source include/load_sysvars.inc

###############################################################
#              START OF max_waiting_queries TESTS             #
###############################################################


###################################################################
# Saving initial value in a temporary variable                    #
###################################################################

SET @start_value = @@global.max_waiting_queries;
SELECT @start_value;


--echo '#--------------------FN_DYNVARS_074_01------------------------#'
##################################################################
#           Display the DEFAULT value of max_waiting_queries     #
##################################################################

SET @@global.max_waiting_queries = 5000;
SET @@global.max_waiting_queries = DEFAULT;
SELECT @@global.max_waiting_queries;

--echo '#---------------------FN_DYNVARS_074_02-------------------------#'
############################################### 
#     Verify default value of variable        #
############################################### 

SET @@global.max_waiting_queries = @start_value;
SELECT @@global.max_waiting_queries = 151;


--echo '#--------------------FN_DYNVARS_074_03------------------------#'
##################################################################
#    Change the value of max_waiting_queries to a valid value    #
##################################################################

SET @@global.max_waiting_queries = 100000;
SELECT @@global.max_waiting_queries;
SET @@global.max_waiting_queries = 99999;
SELECT @@global.max_waiting_queries;
SET @@global.max_waiting_queries = 65536;
SELECT @@global.max_waiting_queries;
SET @@global.max_waiting_queries = 1;
SELECT @@global.max_waiting_queries;
SET @@global.max_waiting_queries = 2;
SELECT @@global.max_waiting_queries;


--echo '#--------------------FN_DYNVARS_074_04-------------------------#'
#####################################################################
#      Change the value of max_waiting_queries to invalid value     #
#####################################################################

SET @@global.max_waiting_queries = -1;
SELECT @@global.max_waiting_queries;
SET @@global.max_waiting_queries = 100000000000;
SELECT @@global.max_waiting_queries;
--Error ER_WRONG_TYPE_FOR_VAR
SET @@global.max_waiting_queries = 10000.01;
SELECT @@global.max_waiting_queries;
SET @@global.max_waiting_queries = -1024;
SELECT @@global.max_waiting_queries;
SET @@global.max_waiting_queries = 0;
SELECT @@global.max_waiting_queries;
SET @@global.max_waiting_queries = 100001;
SELECT @@global.max_waiting_queries;

--Error ER_WRONG_TYPE_FOR_VAR
SET @@global.max_waiting_queries = ON;
SELECT @@global.max_waiting_queries;
--Error ER_WRONG_TYPE_FOR_VAR
SET @@global.max_waiting_queries = 'test';
SELECT @@global.max_waiting_queries;


--echo '#-------------------FN_DYNVARS_074_05----------------------------#'
##################################################################### 
#       Test if accessing session max_waiting_queries gives error   #
#####################################################################

--Error ER_GLOBAL_VARIABLE
SET @@session.max_waiting_queries = 4096;
--Error ER_INCORRECT_GLOBAL_LOCAL_VAR
SELECT @@session.max_waiting_queries;


--echo '#----------------------FN_DYNVARS_074_06------------------------#'
############################################################################## 
# Check if the value in GLOBAL & SESSION Tables matches values in variable   #
##############################################################################

SELECT @@global.max_waiting_queries = VARIABLE_VALUE 
FROM INFORMATION_SCHEMA.GLOBAL_VARIABLES 
WHERE VARIABLE_NAME='max_waiting_queries';

SELECT @@max_waiting_queries = VARIABLE_VALUE 
FROM INFORMATION_SCHEMA.SESSION_VARIABLES 
WHERE VARIABLE_NAME='max_waiting_queries';


--echo '#---------------------FN_DYNVARS_074_07----------------------#'
################################################################### 
#      Check if TRUE and FALSE values can be used on variable     #
################################################################### 

SET @@global.max_waiting_queries = TRUE;
SELECT @@global.max_waiting_queries;
SET @@global.max_waiting_queries = FALSE;
SELECT @@global.max_waiting_queries;


--echo '#---------------------FN_DYNVARS_074_08----------------------#'
########################################################################################################
#    Check if accessing variable with SESSION,LOCAL and without SCOPE points to same session variable  #
########################################################################################################

SET @@global.max_waiting_queries = 5000;
SELECT @@max_waiting_queries = @@global.max_waiting_queries;


--echo '#---------------------FN_DYNVARS_074_09----------------------#'
##########################################################################
#  Check if max_waiting_queries can be accessed with and without @@ sign #
##########################################################################

--Error ER_GLOBAL_VARIABLE
SET max_waiting_queries = 6000;
SELECT @@max_waiting_queries;
--Error ER_PARSE_ERROR
SET local.max_waiting_queries = 7000;
--Error ER_UNKNOWN_TABLE
SELECT local.max_waiting_queries;
--Error ER_PARSE_ERROR
SET global.max_waiting_queries = 8000;
--Error ER_UNKNOWN_TABLE
SELECT global.max_waiting_queries;
--Error ER_BAD_FIELD_ERROR
SELECT max_waiting_queries = @@session.max_waiting_queries;


##############################  
#   Restore initial value    #
##############################

SET @@global.max_waiting_queries = @start_value;
SELECT @@global.max_waiting_queries;


##################################################################
#              END OF max_waiting_queries TESTS                  #
##################################################################

