# Checks if the slave stops executing transactions when master's binlog format
# is STATEMENT but dependency replication is enabled
-- source include/master-slave.inc
-- source include/have_mts_dependency_replication.inc

call mtr.add_suppression("Master's binlog format is not ROW");

connection slave;
set @save.mts_dependency_replication= @@global.mts_dependency_replication;

connection master;
create table t1(a int) engine=innodb;
set session binlog_format=STATEMENT;
insert into t1 values(1);

# Wait till we hit the binlog format mismatch error
connection slave;
let $slave_sql_errno= convert_error(ER_MTS_INCONSISTENT_DATA); # 1756
let $show_slave_sql_error= 1;
source include/wait_for_slave_sql_error.inc;

# Print table
connection slave;
echo "Table after error";
select * from t1;

connection slave;
# Turn off dependency replication and start the slave again
set global mts_dependency_replication= NONE;
start slave;

connection master;
sync_slave_with_master;

connection slave;
# Print table again
echo "Table after error fixed";
select * from t1;

# Cleanup
connection master;
drop table t1;
sync_slave_with_master;

connection slave;
stop slave;
set @@global.mts_dependency_replication= @save.mts_dependency_replication;
start slave;

-- source include/rpl_end.inc
