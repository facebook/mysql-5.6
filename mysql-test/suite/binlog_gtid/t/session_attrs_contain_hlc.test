--source include/have_binlog_format_row.inc
--source include/have_debug.inc
--source include/have_gtid.inc

--enable_session_track_info

--let $saved_minimum_hlc_ns= `SELECT @@global.minimum_hlc_ns`
--let $saved_enable_binlog_hlc= `SELECT @@global.enable_binlog_hlc`
--let $saved_response_attrs_contain_hlc= `SELECT @@session.response_attrs_contain_hlc`

# Cleanup old binlog
flush logs;
let $binlog= query_get_value(SHOW MASTER STATUS, File, 1);
replace_result $binlog binlog;
eval purge binary logs to '$binlog';

# Setup
# Set minimum_hlc_ns to a high value. Subsequent txn's should see monotonically
# increasing timestamp from this point
SET SESSION DEBUG="+d,allow_long_hlc_drift_for_tests";
SET @@global.minimum_hlc_ns = 2538630000000000000; # ~2050 AD

# Enable tracking response attribute
SET @@session.session_track_response_attributes = on;

# Enable binlog_hlc
SET @@global.enable_binlog_hlc = true;

# Enable session to track HLC
SET @@session.response_attrs_contain_hlc = true;

# Case 1: Enable binlog HLC and run a single statement txn
--echo Case 1: Single statement txn. Commit ts needs to be updated at commit time
USE test;

CREATE TABLE t1 (a INT PRIMARY KEY, b CHAR(8));
INSERT INTO t1 VALUES(1, 'a');
INSERT INTO t1 VALUES(2, 'b');
--source include/show_binlog_events.inc

# Case 2: Enable binlog HLC and run multi statement txn
--echo Case 2: Multi statement txn. Commit ts needs to be updated at commit time
BEGIN;
  INSERT INTO t1 VALUES(3, 'c');
  INSERT INTO t1 VALUES(4, 'd');
COMMIT;

SELECT * FROM t1;

--source include/show_binlog_events.inc

# Case 3: Turning off binlog_hlc should stop sending hlc in ok packets
--echo Case 3: Turning off binlog_hlc should stop sending hlc in ok packets
# Disable binlog_hlc
SET @@global.enable_binlog_hlc = false;

# Enable session to track HLC
SET @@session.response_attrs_contain_hlc = true;
INSERT INTO t1 VALUES(5, 'e');
COMMIT;

--source include/show_binlog_events.inc

# Case 4: Turning off response_attrs_contain_hlc should stop sending hlc in ok packets even though binlog_hlc is enabled
--echo Case 4: Turning off response_attrs_contain_hlc should stop sending hlc in ok packets
SET @@global.enable_binlog_hlc = true;
SET @@session.response_attrs_contain_hlc = false;
INSERT INTO t1 VALUES(6, 'f');
COMMIT;

--source include/show_binlog_events.inc

# Cleanup
USE test;
DROP TABLE t1;
--disable_query_log
--eval SET GLOBAL minimum_hlc_ns = $saved_minimum_hlc_ns
--eval SET GLOBAL enable_binlog_hlc = $saved_enable_binlog_hlc
--eval SET SESSION response_attrs_contain_hlc = $saved_response_attrs_contain_hlc
--eval SET SESSION DEBUG="-d,allow_long_hlc_drift_for_tests"
--enable_query_log
