--source include/have_util_zstd.inc

#
# Test LOAD DATA INFILE COMPRESSED replication
#
--source include/master-slave.inc

--source include/rpl_connection_master.inc

--let $tmp_dir= `SELECT @@GLOBAL.secure_file_priv`
--let $input_file_zstd=$tmp_dir/t1.txt.zst

CREATE TABLE t1(x VARCHAR(100));

# generate big random input data
--exec dd bs=10000000 count=1 if=/dev/urandom | base64 -w 80 > $tmp_dir/t1.tmp
--exec head -n 100000  $tmp_dir/t1.tmp  > $tmp_dir/t1.txt
--exec zstd -z $tmp_dir/t1.txt -o $input_file_zstd
--remove_file $tmp_dir/t1.txt
--remove_file $tmp_dir/t1.tmp

#load compressed file into table
--replace_result $input_file_zstd INPUT_FILE_ZSTD
--eval LOAD DATA INFILE '$input_file_zstd' INTO TABLE t1 COMPRESSED;

#check number of loaded rows
--let $assert_text= 100000 records in t1.
--let $assert_cond= COUNT(*) = 100000 FROM t1
--source include/assert.inc

#check number of replicated rows
--source include/sync_slave_sql_with_master.inc
--source include/rpl_connection_slave.inc
--let $assert_text= 100000 records in t1.
--let $assert_cond= COUNT(*) = 100000 FROM t1
--source include/assert.inc

#cleanup
--source include/rpl_connection_master.inc

--remove_file $input_file_zstd
DROP TABLE t1;
--source include/rpl_end.inc
