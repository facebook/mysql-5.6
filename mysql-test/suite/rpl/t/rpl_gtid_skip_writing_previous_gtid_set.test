-- source include/master-slave.inc
-- source include/have_gtid.inc
-- source include/gtid_utils.inc
-- source include/rpl_reset.inc
-- source include/have_debug.inc

-- connection master
-- let $master_uuid= `SELECT @@SERVER_UUID`
create table t1(a int);
insert into t1 values(1);
insert into t1 values(2);
FLUSH LOGS;

-- let $assert_text = gtid set on master.
-- let $assert_cond= GTID_IS_EQUAL(@@GLOBAL.GTID_EXECUTED, "$master_uuid:1-3")
-- source include/assert.inc

-- let $rpl_server_number= 1
-- let $rpl_start_with_gtids= 1
-- let $rpl_server_parameters= --debug=d,skip_writing_previous_gtids_log_event
-- source include/rpl_restart_server.inc
-- let $rpl_server_parameters=
-- source include/rpl_restart_server.inc

-- let $assert_text = gtid set on master after restart with skip_writing_previous_gtids_log_event.
-- let $assert_cond= GTID_IS_EQUAL(@@GLOBAL.GTID_EXECUTED, "$master_uuid:1-3")
-- source include/assert.inc

save_master_pos;
connection slave;
-- disable_warnings
-- source include/start_slave.inc
-- enable_warnings
sync_with_master;

-- let $assert_text = gtid set on slave.
-- let $assert_cond= GTID_IS_EQUAL(@@GLOBAL.GTID_EXECUTED, "$master_uuid:1-3")
-- source include/assert.inc

-- connection master
drop table t1;
-- source include/gtid_utils_end.inc
-- source include/rpl_end.inc
