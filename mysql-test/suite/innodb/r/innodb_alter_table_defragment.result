DROP TABLE if exists t1;
CREATE TABLE t1 (a INT NOT NULL PRIMARY KEY AUTO_INCREMENT, b VARCHAR(256), KEY SECOND(a, b)) ENGINE=INNODB;
## Test-1 defragment an empty table
alter table t1 defragment;
## Test-2 defragment a single page table
INSERT INTO t1 VALUES (1, REPEAT('A', 256));
INSERT INTO t1 VALUES (2, REPEAT('A', 256));
INSERT INTO t1 VALUES (3, REPEAT('A', 256));
INSERT INTO t1 (b) SELECT b from t1;
INSERT INTO t1 (b) SELECT b from t1;
alter table t1 defragment;
## Test-3 defragment (somewhat) in parallel with delete queries
create procedure defragment()
begin
set @i = 0;
repeat
set @i = @i + 1;
alter table t1 defragment;
select sleep(0.5);
until @i = 3 end repeat;
end //
select count(*) from t1;
count(*)
12288
call defragment();
alter table t1 defragment;
select count(*) from t1;
count(*)
10203
select count(*) from t1 force index (second);
count(*)
10203
select count(*) < expected from information_schema.innodb_buffer_page where table_name like '%t1%' and index_name = 'second' and access_time > 0;
count(*) < expected
1
## Test-4 defragment with larger n_pages
SET @@global.innodb_defragment_n_pages = 3;
alter table t1 defragment;
select count(*) from t1;
count(*)
9208
select count(*) > expected from information_schema.innodb_buffer_page where table_name like '%t1%' and index_name = 'PRIMARY' and access_time > 0;
count(*) > expected
1
select count(*) from t1 force index (second);
count(*)
9208
select count(*) > expected from information_schema.innodb_buffer_page where table_name like '%t1%' and index_name = 'second' and access_time > 0;
count(*) > expected
1
SET @@global.innodb_defragment_n_pages = 10;
alter table t1 defragment index PRIMARY;
select count(*) from t1;
count(*)
9208
select count(*) from t1 force index (second);
count(*)
9208
select count(*) > expected from information_schema.innodb_buffer_page where table_name like '%t1%' and index_name = 'second' and access_time > 0;
count(*) > expected
1
SET @@global.innodb_defragment_n_pages = 10;
alter table t1 defragment index second;
select count(*) from t1 force index (second);
count(*)
9208
select count(*) < expected from information_schema.innodb_buffer_page where table_name like '%t1%' and index_name = 'second' and access_time > 0;
count(*) < expected
1
## Test-5 kill a defragment command
set global innodb_defragment_frequency = 1;
alter table t1 defragment;
kill query ID;
select sleep(3);
sleep(3)
0
ERROR 70100: Query execution was interrupted
set global innodb_defragment_frequency = 100;
## Test-6 defragment index already being defragmented.
alter table t1 defragment index PRIMARY async_commit;
alter table t1 defragment index PRIMARY;
ERROR 42000: ./test/t1 PRIMARY already exists
call mtr.add_suppression("InnoDB: Warning: MySQL is trying to drop table ");
DROP PROCEDURE defragment;
DROP TABLE t1;
