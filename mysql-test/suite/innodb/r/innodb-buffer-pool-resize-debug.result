set global innodb_file_format=`Barracuda`;
set global innodb_file_per_table=ON;
set global innodb_thread_concurrency=20;
create table t2 (c1 int not null primary key, c2 int not null default 0) engine=InnoDB;
insert into t2 (c1, c2) values (1, 1);
create table t3 (c1 int not null primary key, c2 int not null default 0) engine=InnoDB;
insert into t3 (c1, c2) values (1, 1);
create table t4 (c1 int not null primary key, c2 int not null default 0) engine=InnoDB;
insert into t4 (c1, c2) values (1, 1);
create table t5 (c1 int not null primary key, c2 int not null default 0) engine=InnoDB;
insert into t5 (c1, c2) values (1, 1);
create table t6 (c1 int not null primary key, c2 int not null default 0) engine=InnoDB;
insert into t6 (c1, c2) values (1, 1);
create database test2;
create table test2.t7 (c1 int not null primary key, c2 int not null default 0) engine=InnoDB;
insert into test2.t7 (c1, c2) values (1, 1);
drop table test2.t7;
set DEBUG_SYNC='RESET';
set global DEBUG="+d,ib_buf_pool_resize_wait_before_resize";
set global innodb_buffer_pool_size = 12*1024*1024;
Expect warning and not updated
set global innodb_buffer_pool_size = 8*1024*1024;
Warnings:
Warning	1210	Cannot update innodb_buffer_pool_size, another resize is already in progress.
select @@global.innodb_buffer_pool_size;
@@global.innodb_buffer_pool_size
12582912
select @@global.innodb_adaptive_hash_index;
@@global.innodb_adaptive_hash_index
0
set global innodb_adaptive_hash_index = ON;
select @@global.innodb_adaptive_hash_index;
@@global.innodb_adaptive_hash_index
0
set global innodb_adaptive_hash_index = OFF;
select @@global.innodb_adaptive_hash_index;
@@global.innodb_adaptive_hash_index
0
set DEBUG_SYNC='wait_for_buf_pool_resizing SIGNAL signal_1';
create table t1 (c1 int not null primary key, c2 int not null default 0) engine=InnoDB;
set DEBUG_SYNC='now WAIT_FOR signal_1';
set DEBUG_SYNC='wait_for_buf_pool_resizing SIGNAL signal_2';
analyze table t2;
set DEBUG_SYNC='now WAIT_FOR signal_2';
set DEBUG_SYNC='wait_for_buf_pool_resizing SIGNAL signal_3';
alter table t3 algorithm=inplace, add index idx (c1);
set DEBUG_SYNC='now WAIT_FOR signal_3';
set DEBUG_SYNC='wait_for_buf_pool_resizing SIGNAL signal_4';
alter table t4 rename to t0;
set DEBUG_SYNC='now WAIT_FOR signal_4';
set DEBUG_SYNC='wait_for_buf_pool_resizing SIGNAL signal_5';
drop table t5;
set DEBUG_SYNC='now WAIT_FOR signal_5';
set DEBUG_SYNC='wait_for_buf_pool_resizing SIGNAL signal_6';
alter table t6 discard tablespace;
set DEBUG_SYNC='now WAIT_FOR signal_6';
set DEBUG_SYNC='wait_for_buf_pool_resizing SIGNAL signal_7';
drop database test2;
set DEBUG_SYNC='now WAIT_FOR signal_7';
set DEBUG_SYNC='wait_for_buf_pool_resizing SIGNAL signal_8';
select count(*) > 0 from information_schema.innodb_buffer_page;
set DEBUG_SYNC='now WAIT_FOR signal_8';
set global DEBUG="-d,ib_buf_pool_resize_wait_before_resize";
Table	Op	Msg_type	Msg_text
test.t2	analyze	status	OK
count(*) > 0
1
set DEBUG_SYNC='RESET';
call mtr.add_suppression("\\[ERROR\\] InnoDB: buffer pool 0 : failed to allocate new memory.");
set global DEBUG="+d,ib_buf_chunk_init_fails";
set global innodb_buffer_pool_size = 16*1024*1024;
set global DEBUG="-d,ib_buf_chunk_init_fails";
create table t8 (c1 int not null primary key, c2 int not null default 0) engine=InnoDB;
insert into t8 (c1, c2) values (1, 1);
drop table t8;
drop table t1;
drop table t2;
drop table t3;
drop table t0;
drop table t6;
