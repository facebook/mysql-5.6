#
# Testing crash during a drop with innodb_sync_checkpoint_limit set to
# confirm recovery works with that set to a large value
#
# Don't test this under valgrind, memory leaks will occur
# Binary must be compiled with debug for crash to occur
drop table if exists t1,t0;
call mtr.add_suppression(".*");
create table t0(i int primary key auto_increment) engine=innodb;
create table t1(i int primary key) engine=innodb;
insert into t1 values (1), (2), (3), (4);
insert into t0 values (null), (null), (null), (null);
insert into t0 select null from t0;
insert into t0 select null from t0;
insert into t0 select null from t0;
insert into t0 select null from t0;
insert into t0 select null from t0;
insert into t0 select null from t0;
insert into t0 select null from t0;
insert into t0 select null from t0;
insert into t0 select null from t0;
insert into t0 select null from t0;
insert into t0 select null from t0;
insert into t0 select null from t0;
insert into t0 select null from t0;
insert into t0 select null from t0;
insert into t0 select null from t0;
select count(*) from t0;
count(*)
131072
begin;
insert into t1 values (5);
set session debug="d,crash_commit_before";
# Write file to make mysql-test-run.pl expect crash
commit;
ERROR HY000: Lost connection to MySQL server during query
# Turn on reconnect
# poll the server waiting for it to be back online
# confirm 5 is not inserted into t1
select * from t1;
i
1
2
3
4
select count(*) from t0;
count(*)
131072
drop table t0;
drop table t1;
set session debug = 'RESET';
