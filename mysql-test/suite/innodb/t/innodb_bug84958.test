#
# Bug #84958 InnoDB's MVCC has O(N^2) behaviors
# https://bugs.mysql.com/bug.php?id=84958
#

--source include/have_innodb.inc
--source include/count_sessions.inc

delimiter ~~;
create procedure insert_n(n int)
begin
    declare i int default 0;
    while i < n do
        insert into t1 values (1, 2, 3) on duplicate key update c= c + 1;
        set i = i + 1;
    end while;
end~~

create function bprrs()
returns int
begin
    declare ret int;
    select variable_value
    from information_schema.global_status
    where
        variable_name = 'innodb_buffer_pool_read_requests'
    into ret;
    return ret;
end~~
delimiter ;~~

create table t1 (a int, b int, c int, primary key(a,b), key (b,c)) engine=InnoDB;

connect (con2, localhost, root,,);

begin;
select * from t1;

connection con2;
call insert_n(100);

connection default;
set @rr1= bprrs();

select * from t1 force index (b);
set @rr2= bprrs();
select @rr2 - @rr1 < 1000;

disconnect con2;

connection default;
drop table t1;

# This testcase verifies that we return correct offsets when returning old_version
# of a cluster index record.

create table t1 (a int, b int, c int, primary key(a,b), key (b,c)) engine=innodb;

insert into t1 values (1,2,3) on duplicate key update c=c+1;

begin;
select * from t1;

connect (con2, localhost, root,,);
--connection con2

--let $i=3
while ($i)
{
insert into t1 values (1,2,3) on duplicate key update c=null;
--dec $i
}

--connection default
select * from t1 force index (primary);
select * from t1 force index (b);

commit;

disconnect con2;

connection default;
drop table t1;
drop procedure insert_n;
drop function bprrs;
--source include/wait_until_count_sessions.inc
