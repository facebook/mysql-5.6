--source include/have_log_bin.inc
--source include/save_binlog_position.inc

# Save the initial number of concurrent sessions
--source include/count_sessions.inc
SET global skip_sys_tables_engine_check=true; 

--echo # -----------------------------------------------------------------------

--echo # Begin : Tests for RENAME USER

CREATE USER userX, userY, userZ;

SELECT user, authentication_string FROM mysql.user WHERE user like 'user%';
--source include/save_binlog_position.inc

--echo # Modify multiple users
RENAME USER userX TO userA, userY TO userB, userZ TO userC;

--echo # Must show userA, userB, userC
SELECT user, authentication_string FROM mysql.user WHERE user like 'user%';

--let $event= !Q(RENAME USER.*userX.TO.*userA.*,.*userY.*TO.*userB.*,.*userZ.*TO.*userC.*)
--source ../include/auth_sec_assert_binlog_events.inc
--source include/save_binlog_position.inc

--echo # Try renaming a non-existent user
--error ER_CANNOT_USER
RENAME USER userA TO userX, user_ne1 TO user_ne2, userC TO userZ;

--echo # Must show userA, userB, userC
SELECT user, authentication_string FROM mysql.user WHERE user like 'user%';

--let $invert= 1
--let $event= !Q(RENAME USER.*userA.*TO.*userX.*,.*user_ne1.*TO.*user_ne2.*,.*userC.*TO.*userZ.*)
--source ../include/auth_sec_assert_binlog_events.inc
--let $invert= 0

--echo # Insert an entry in mysql.user table but do not execute FLUSH PRIVILEGES
CREATE TABLE mysql.tmp_user LIKE mysql.user;
INSERT INTO mysql.tmp_user SELECT * FROM mysql.user WHERE user LIKE 'userC';
UPDATE mysql.tmp_user SET user='userZ' WHERE user LIKE 'userC';
INSERT INTO mysql.user SELECT * FROM mysql.tmp_user;
DROP TABLE mysql.tmp_user;

--source include/save_binlog_position.inc

--echo # Though userX is not present in cache, RENAME should check in mysql.user
--echo # table for the presence of an entry which may create problem while
--echo # renaming users.

--error ER_CANNOT_USER
RENAME USER userA TO userX, userB TO userY, userC TO userZ;

--echo # Must show userA, userB, userC and userZ
SELECT user, authentication_string FROM mysql.user WHERE user like 'user%';

--let $invert= 1
--let $event= !Q(RENAME USER.*userA.*TO.*userX.*,.*userB.*TO.*userY.*,.*userC.*TO.*userZ.*)
--source ../include/auth_sec_assert_binlog_events.inc
--let $invert= 0

FLUSH PRIVILEGES;
--source include/save_binlog_position.inc

--echo # Try renaming two different user and use same user as target
--error ER_CANNOT_USER
RENAME USER userA TO userX, userB TO userX;

--echo # Must show userA, userB, userC
SELECT user, authentication_string FROM mysql.user WHERE user like 'user%';

--let $invert= 1
--let $event= !Q(RENAME USER.*userA.*TO.*userX.*,.*userB.*TO.*userX.*)
--source ../include/auth_sec_assert_binlog_events.inc
--let $invert= 0

--echo # This should succeed
RENAME USER userA TO userX, userB TO userA, userZ TO userB, userC TO userZ;

--echo # Must show userA, userB, userX and userZ
SELECT user, authentication_string FROM mysql.user WHERE user like 'user%';

--let $event= !Q(RENAME USER.*userA.*TO.*userX.*,.*userB.*TO.*userA.*,.*userZ.*TO.*userB.*,.*userC.*TO.*userZ.*)
--source ../include/auth_sec_assert_binlog_events.inc
--source include/save_binlog_position.inc

DROP USER userA, userB, userX, userZ;

--source include/save_binlog_position.inc

--echo ## Malformed table should be handled gracefully
--disable_query_log
call mtr.add_suppression('.*does not support system tables.*');
call mtr.add_suppression('.*Column count of mysql.user is wrong.*');
--enable_query_log

RENAME TABLE mysql.user TO mysql.user_bak;
CREATE TABLE mysql.user(dummy INT) ENGINE=MyISAM;
FLUSH PRIVILEGES;
SHOW WARNINGS;
DROP TABLE mysql.user;
RENAME TABLE mysql.user_bak TO mysql.user;
FLUSH PRIVILEGES;

--echo #
--echo # Bug #32068470: TO_HOST AND TO_USER NOT SET
--echo # Self-renaming isuses
--echo # Regular user
CREATE USER a;
GRANT CREATE USER ON *.* TO a;
--connect(con1, localhost, a)
SELECT user(), current_user();
RENAME USER a TO b;
SELECT user(), current_user();

--connection default
disconnect con1;
DROP USER b;

CREATE USER a;
GRANT CREATE USER ON *.* TO a;
--connect(con1, localhost, a)
SELECT user(), current_user();
RENAME USER a TO b, b TO c;
SELECT user(), current_user();

--connection default
disconnect con1;
DROP USER c;

CREATE USER a;
GRANT CREATE USER ON *.* TO a;
--connect(con1, localhost, a)
SELECT user(), current_user();
RENAME USER a TO b, b TO c, c TO a;
SELECT user(), current_user();

--connection default
disconnect con1;
DROP USER a;

CREATE USER a;
GRANT CREATE USER ON *.* TO a;
--connect(con1, localhost, a)
SELECT user(), current_user();
RENAME USER a TO a@1;
SELECT user(), current_user();

--connection default
disconnect con1;
DROP USER a@1;

CREATE USER a;
GRANT CREATE USER ON *.* TO a;
--connect(con1, localhost, a)
SELECT user(), current_user();
RENAME USER a TO b@1;
SELECT user(), current_user();

--connection default
disconnect con1;
DROP USER b@1;


--echo # Proxy user
CREATE USER a IDENTIFIED with 'mysql_native_password', b;
GRANT CREATE USER ON *.* TO b;
GRANT PROXY ON b TO a;
SET @@global.check_proxy_users = ON;
SET @@global.mysql_native_password_proxy_users = ON;
--connect(con1, localhost, a)
SELECT user(), current_user(), @@proxy_user;
RENAME USER a TO c;
SELECT user(), current_user(), @@proxy_user;

--connection default
disconnect con1;
DROP USER b, c;
SET @@global.check_proxy_users = OFF;
SET @@global.mysql_native_password_proxy_users = OFF;

--echo # Anonymous user
CREATE USER ''@'localhost';
GRANT CREATE USER ON *.* TO ''@'localhost';
--connect(con1, localhost)
--replace_column 1 CONNECTED_USER
SELECT user(), current_user();
RENAME USER ''@'localhost' TO a;
--replace_column 1 CONNECTED_USER
SELECT user(), current_user();

--connection default
disconnect con1;
DROP USER a;

--echo # End : Tests for RENAME USER

--echo # -----------------------------------------------------------------------

SET GLOBAL skip_sys_tables_engine_check=default; 
# Wait till we reached the initial number of concurrent sessions
--source include/wait_until_count_sessions.inc
