-- source include/have_gtid.inc

RESET MASTER;
-- let $MASTER_UUID= `SELECT @@SERVER_UUID;`
drop table if exists t1;
create table t1 (a int);
insert into t1 values(1);
insert into t1 values(2);
FLUSH LOGS;
insert into t1 values(3);

-- let $i = 1
-- let $include_silent = 1
while ($i <= 5)
{
  -- let $log_name = query_get_value("FIND BINLOG GTID = '$MASTER_UUID:$i'", Log_name, 1)
  -- let $log_pos = query_get_value("FIND BINLOG GTID = '$MASTER_UUID:$i'", Position, 1)
  -- let $gtid = query_get_value("SHOW BINLOG EVENTS IN '$log_name' FROM $log_pos LIMIT 1", Info, 1)

  -- let assert_text = Gtid used in FIND BINLOG GITD and returned by SHOW BINLOG EVENTS should be same
  -- let assert_cond = `SELECT "$gtid" = "SET @@SESSION.GTID_NEXT= '$MASTER_UUID:$i'"`
  -- source include/assert.inc
  -- inc $i
}
-- let $include_silent =

-- error ER_MALFORMED_GTID_SPECIFICATION
-- eval FIND BINLOG GTID = 'malformed_gtid'

PURGE BINARY LOGS TO 'master-bin.000002';

-- replace_result $MASTER_UUID uuid
-- error ER_REQUESTED_PURGED_GTID
-- eval FIND BINLOG GTID = '$MASTER_UUID:1'

-- replace_result $MASTER_UUID uuid
-- error ER_REQUESTED_GTID_NOT_IN_EXECUTED_SET
-- eval FIND BINLOG GTID = '$MASTER_UUID:10'

drop table t1;
