include/rpl_init.inc [topology=1->2,1->3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
include/rpl_connect.inc [creating master]
include/rpl_connect.inc [creating master1]
include/rpl_connect.inc [creating async_slave]
include/rpl_connect.inc [creating semi_sync_slave]
[connection master]
set @save.rpl_wait_for_semi_sync_ack= @@global.rpl_wait_for_semi_sync_ack;
set @@global.rpl_wait_for_semi_sync_ack= true;
set @save.rpl_semi_sync_master_timeout= @@global.rpl_semi_sync_master_timeout;
set @@global.rpl_semi_sync_master_timeout= 10000000;
call mtr.add_suppression("Run function 'wait_for_semi_sync_ack' in plugin 'rpl_semi_sync_master' failed");
call mtr.add_suppression("Error while waiting for semi-sync ACK on dump thread");
call mtr.add_suppression("A message intended for a client cannot be sent there as no client-session is attached");
call mtr.add_suppression("Timeout waiting for reply of binlog");
[connection semi_sync_slave]
set @@global.debug= '+d,before_semi_sync_reply';
[connection master]
create table t1 (a int);
[connection semi_sync_slave]
set debug_sync='now WAIT_FOR reached';
[connection async_slave]
include/assert.inc [Async Slave: Should not contain any tables]
[connection semi_sync_slave]
set debug_sync='now SIGNAL continue';
[connection master]
include/assert.inc [Master: Should contain t1]
include/sync_slave_sql_with_master.inc
[connection async_slave]
include/assert.inc [Async Slave: Should contain t1]
[connection master]
create table t2(a int);
[connection semi_sync_slave]
set debug_sync='now WAIT_FOR reached';
[connection master1]
"Killing thread"
kill id;
"Waiting for async slave to reconnect"
[connection async_slave]
include/assert.inc [Async Slave: t2 should not be present]
[connection semi_sync_slave]
set debug_sync='now SIGNAL continue';
[connection master]
include/assert.inc [Master: should have t1 and t2]
"Waiting for both slaves to catchup"
[connection master]
include/sync_slave_sql_with_master.inc
[connection master]
include/sync_slave_sql_with_master.inc
[connection async_slave]
include/assert.inc [Async Slave: should have t1 and t2]
[connection semi_sync_slave]
include/assert.inc [Semi-sync Slave: should have t1 and t2]
[connection master]
create table t3(a int);
[connection semi_sync_slave]
set debug_sync='now WAIT_FOR reached';
[connection master1]
"Switching off rpl_semi_sync_master_enabled while async thread is waiting for ack"
set @@global.rpl_semi_sync_master_enabled = 0;
"Waiting till async slave is caught up"
include/sync_slave_sql_with_master.inc
[connection async_slave]
include/assert.inc [Async Slave: should have t1, t2 and t3]
[connection semi_sync_slave]
set debug_sync='now SIGNAL continue';
"Switching rpl_semi_sync_master_enabled back on"
[connection master]
set @@global.rpl_semi_sync_master_enabled = 1;
[connection semi_sync_slave]
include/stop_slave.inc
include/start_slave.inc
[connection master]
"Waiting till semi-sync slave is caught up"
include/sync_slave_sql_with_master.inc
[connection semi_sync_slave]
include/assert.inc [Semi-sync Slave: should have t1, t2 and t3]
[connection master]
create table t4(a int);
[connection semi_sync_slave]
set debug_sync='now WAIT_FOR reached';
[connection master1]
"Switching off rpl_wait_for_semi_sync_ack while async thread is waiting for ack"
set @@global.rpl_wait_for_semi_sync_ack = 0;
"Waiting till async slave is caught up"
include/sync_slave_sql_with_master.inc
[connection async_slave]
include/assert.inc [Async Slave: should have t1, t2, t3 and t4]
[connection semi_sync_slave]
set debug_sync='now SIGNAL continue';
"Switching rpl_wait_for_semi_sync_ack back on"
[connection master]
set @@global.rpl_wait_for_semi_sync_ack = 1;
[connection semi_sync_slave]
include/stop_slave.inc
include/start_slave.inc
[connection master]
"Waiting till semi-sync slave is caught up"
include/sync_slave_sql_with_master.inc
[connection semi_sync_slave]
include/assert.inc [Semi-sync Slave: should have t1, t2, t3 and t4]
[connection semi_sync_slave]
set @@global.debug= '-d,before_semi_sync_reply';
[connection master]
drop table t1;
drop table t2;
drop table t3;
drop table t4;
set @@global.rpl_wait_for_semi_sync_ack= @save.rpl_wait_for_semi_sync_ack;
set @@global.rpl_semi_sync_master_timeout= @save.rpl_semi_sync_master_timeout;
[connection master]
include/sync_slave_sql_with_master.inc
[connection master]
include/sync_slave_sql_with_master.inc
include/rpl_end.inc
