SET @ORIG_PAUSE_BACKGROUND_WORK = @@ROCKSDB_PAUSE_BACKGROUND_WORK;
SET GLOBAL ROCKSDB_PAUSE_BACKGROUND_WORK = 1;
DROP TABLE IF EXISTS t1;
CREATE TABLE t1 (
t TEXT,
tt TINYTEXT,
m MEDIUMTEXT,
l LONGTEXT,
PRIMARY KEY t (t(32))
) ENGINE=rocksdb;
SHOW INDEX IN t1;
Table	Non_unique	Key_name	Seq_in_index	Column_name	Collation	Cardinality	Sub_part	Packed	Null	Index_type	Comment	Index_comment	Visible	Expression
t1	0	PRIMARY	1	t	A	1000	32	NULL		SE_SPECIFIC			YES	NULL
INSERT INTO t1 (t,tt,m,l) VALUES
('','','',''),
('a','b','c','d'),
('b','d','c','b'),
('test1','test2','test3','test4'),
(REPEAT('a',128),REPEAT('b',128),REPEAT('c',128),REPEAT('d',128)),
('abc','def','ghi','jkl'),
('test2','test3','test4','test5'),
('test3','test4','test5','test6'),
(REPEAT('b',128),REPEAT('f',128),REPEAT('e',128),REPEAT('d',128)),
(REPEAT('c',128),REPEAT('b',128),REPEAT('c',128),REPEAT('e',128));
EXPLAIN SELECT SUBSTRING(t,16) AS f FROM t1 WHERE t IN ('test1','test2') ORDER BY f;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	PRIMARY	PRIMARY	#	NULL	#	#	Using where; Using filesort
Warnings:
Note	1003	/* select#1 */ select substr(`test`.`t1`.`t`,16) AS `f` from `test`.`t1` where (`test`.`t1`.`t` in ('test1','test2')) order by `f`
SELECT SUBSTRING(t,16) AS f FROM t1 WHERE t IN ('test1','test2') ORDER BY f;
f


EXPLAIN SELECT SUBSTRING(t,16) AS f FROM t1 IGNORE INDEX (PRIMARY) WHERE t IN ('test1','test2') ORDER BY f;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	#	#	Using where; Using filesort
Warnings:
Note	1003	/* select#1 */ select substr(`test`.`t1`.`t`,16) AS `f` from `test`.`t1` IGNORE INDEX (PRIMARY) where (`test`.`t1`.`t` in ('test1','test2')) order by `f`
SELECT SUBSTRING(t,16) AS f FROM t1 IGNORE INDEX (PRIMARY) WHERE t IN ('test1','test2') ORDER BY f;
f


DROP TABLE t1;
CREATE TABLE t1 (
t TEXT,
tt TINYTEXT,
m MEDIUMTEXT,
l LONGTEXT,
pk TINYTEXT PRIMARY KEY,
UNIQUE INDEX l_tt (l(256),tt(64))
) ENGINE=rocksdb;
ERROR 42000: BLOB/TEXT column 'pk' used in key specification without a key length
CREATE TABLE t1 (
t TEXT,
tt TINYTEXT,
m MEDIUMTEXT,
l LONGTEXT,
pk MEDIUMTEXT,
PRIMARY KEY mt (pk(1)),
INDEX (m(128))
) ENGINE=rocksdb;
SHOW INDEX IN t1;
Table	Non_unique	Key_name	Seq_in_index	Column_name	Collation	Cardinality	Sub_part	Packed	Null	Index_type	Comment	Index_comment	Visible	Expression
t1	0	PRIMARY	1	pk	A	1000	1	NULL		SE_SPECIFIC			YES	NULL
t1	1	m	1	m	A	500	128	NULL	YES	SE_SPECIFIC			YES	NULL
INSERT INTO t1 (t,tt,m,l,pk) VALUES
('','','','','0'),
('a','b','c','d','1'),
('b','d','c','b','2'),
('test1','test2','test3','test4','3'),
(REPEAT('a',128),REPEAT('b',128),REPEAT('c',128),REPEAT('d',128),'4'),
('abc','def','ghi','jkl','5'),
('test2','test3','test4','test5','6'),
('test3','test4','test5','test6','7'),
(REPEAT('b',128),REPEAT('f',128),REPEAT('e',128),REPEAT('d',128),'8'),
(REPEAT('c',128),REPEAT('b',128),REPEAT('c',128),REPEAT('e',128),'9');
EXPLAIN SELECT SUBSTRING(m,128) AS f FROM t1 WHERE m = 'test1' ORDER BY f DESC;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	m	m	#	const	#	#	Using where; Using filesort
Warnings:
Note	1003	/* select#1 */ select substr(`test`.`t1`.`m`,128) AS `f` from `test`.`t1` where (`test`.`t1`.`m` = 'test1') order by `f` desc
SELECT SUBSTRING(m,128) AS f FROM t1 WHERE m = 'test1' ORDER BY f DESC;
f
DROP TABLE t1;
CREATE TABLE t1 (
b TEXT,
PRIMARY KEY b (b(32))
) ENGINE=rocksdb;
INSERT INTO t1 (b) VALUES
('00000000000000000000000000000000'),
('00000000000000000000000000000001'),
('00000000000000000000000000000002');
SELECT b FROM t1;
b
00000000000000000000000000000000
00000000000000000000000000000001
00000000000000000000000000000002
DROP TABLE t1;
CREATE TABLE t1 (
b TINYTEXT,
PRIMARY KEY b (b(32))
) ENGINE=rocksdb;
INSERT INTO t1 (b) VALUES
('00000000000000000000000000000000'),
('00000000000000000000000000000001'),
('00000000000000000000000000000002');
SELECT b FROM t1;
b
00000000000000000000000000000000
00000000000000000000000000000001
00000000000000000000000000000002
DROP TABLE t1;
CREATE TABLE t1 (
b MEDIUMTEXT,
PRIMARY KEY b (b(32))
) ENGINE=rocksdb;
INSERT INTO t1 (b) VALUES
('00000000000000000000000000000000'),
('00000000000000000000000000000001'),
('00000000000000000000000000000002');
SELECT b FROM t1;
b
00000000000000000000000000000000
00000000000000000000000000000001
00000000000000000000000000000002
DROP TABLE t1;
CREATE TABLE t1 (
b LONGTEXT,
PRIMARY KEY b (b(32))
) ENGINE=rocksdb;
INSERT INTO t1 (b) VALUES
('00000000000000000000000000000000'),
('00000000000000000000000000000001'),
('00000000000000000000000000000002');
SELECT b FROM t1;
b
00000000000000000000000000000000
00000000000000000000000000000001
00000000000000000000000000000002
DROP TABLE t1;
CREATE TABLE t1 (
b LONGTEXT CHARACTER SET "binary" COLLATE "binary",
PRIMARY KEY b (b(32))
) ENGINE=rocksdb;
INSERT INTO t1 (b) VALUES
('00000000000000000000000000000000'),
('00000000000000000000000000000001'),
('00000000000000000000000000000002');
INSERT INTO t1 (b) VALUES (''), (_binary 0x0), (' ');
SELECT hex(b) FROM t1;
hex(b)

00
20
3030303030303030303030303030303030303030303030303030303030303030
3030303030303030303030303030303030303030303030303030303030303031
3030303030303030303030303030303030303030303030303030303030303032
DROP TABLE t1;
CREATE TABLE t1 (
b LONGTEXT CHARACTER SET "latin1" COLLATE "latin1_bin",
PRIMARY KEY b (b(32))
) ENGINE=rocksdb;
INSERT INTO t1 (b) VALUES (''), (_binary 0x0), (' ');
ERROR 23000: Duplicate entry ' ' for key 'PRIMARY'
INSERT INTO t1 (b) VALUES (''), (_binary 0x0);
SELECT hex(b) FROM t1;
hex(b)
00

DROP TABLE t1;

#Collation tests

create table t (id int not null auto_increment,
c1 text CHARACTER SET latin1 COLLATE latin1_swedish_ci,
c2 text CHARACTER SET latin1 COLLATE latin1_general_ci,
primary key (id),
key sk1 (c1(1)),
key sk2 (c2(1)));
explain select hex(c1) from t order by c1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	ALL	NULL	NULL	NULL	#	1000	100.00	Using filesort
Warnings:
Note	1003	/* select#1 */ select hex(`test`.`t`.`c1`) AS `hex(c1)` from `test`.`t` order by `test`.`t`.`c1`
explain select hex(c1) from t IGNORE INDEX (sk1) order by c1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	ALL	NULL	NULL	NULL	#	1000	100.00	Using filesort
Warnings:
Note	1003	/* select#1 */ select hex(`test`.`t`.`c1`) AS `hex(c1)` from `test`.`t` IGNORE INDEX (`sk1`) order by `test`.`t`.`c1`
explain select hex(c2) from t order by c2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	ALL	NULL	NULL	NULL	#	1000	100.00	Using filesort
Warnings:
Note	1003	/* select#1 */ select hex(`test`.`t`.`c2`) AS `hex(c2)` from `test`.`t` order by `test`.`t`.`c2`
explain select hex(c2) from t IGNORE INDEX (sk1) order by c2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	ALL	NULL	NULL	NULL	#	1000	100.00	Using filesort
Warnings:
Note	1003	/* select#1 */ select hex(`test`.`t`.`c2`) AS `hex(c2)` from `test`.`t` IGNORE INDEX (`sk1`) order by `test`.`t`.`c2`
truncate t;
insert into t (c1, c2) values ('Asdf    ', 'Asdf    ');
select char_length(c1), c1 from t FORCE INDEX (sk1);
char_length(c1)	c1
8	Asdf    
select char_length(c2), c2 from t FORCE INDEX (sk2);
char_length(c2)	c2
8	Asdf    
drop table t;
create table t (id int not null auto_increment,
c2 text CHARACTER SET latin1 COLLATE latin1_general_ci,
primary key (id),
unique key sk2 (c2(255)));
insert into t (c2) values ('Asdf');
insert into t (c2) values ('asdf ');
ERROR 23000: Duplicate entry 'asdf ' for key 'sk2'
drop table t;
create table t (id int not null auto_increment,
c1 text CHARACTER SET latin1 COLLATE latin1_swedish_ci,
primary key (id),
unique key sk1 (c1(256)));
insert into t (c1) values ('Asdf');
insert into t (c1) values ('asdf ');
ERROR 23000: Duplicate entry 'asdf ' for key 'sk1'
insert into t (c1) values ('asdf');
ERROR 23000: Duplicate entry 'asdf' for key 'sk1'
drop table t;
create table t (id int not null auto_increment,
c1 text CHARACTER SET latin1 COLLATE latin1_swedish_ci,
primary key (id),
unique key sk1 (c1(1)));
insert into t (c1) values ('Asdf');
insert into t (c1) values ('bbbb ');
insert into t (c1) values ('a    ');
ERROR 23000: Duplicate entry 'a' for key 'sk1'
explain select c1 from t;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	ALL	NULL	NULL	NULL	#	1000	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t`.`c1` AS `c1` from `test`.`t`
select c1 from t;
c1
Asdf
bbbb 
drop table t;
set session rocksdb_verify_row_debug_checksums = on;
create table t (id int primary key, email text, KEY email_i (email(30))) engine=rocksdb default charset=latin1;
insert into t values (1, '                                  a');
explain select 'email_i' as index_name, count(*) AS count from t force index(email_i);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	ALL	NULL	NULL	#	#	1000	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select 'email_i' AS `index_name`,count(0) AS `count` from `test`.`t` FORCE INDEX (`email_i`)
select 'email_i' as index_name, count(*) AS count from t force index(email_i);
index_name	count
email_i	1
drop table t;
create table t (id int primary key, email text, KEY email_i (email(767))) engine=rocksdb default charset=latin1;
insert into t values (1, REPEAT('a', 700));
select 'email_i' as index_name, count(*) AS count from t force index(email_i);
index_name	count
email_i	1
drop table t;

#TINYTEXT Covering Indexes

CREATE TABLE t1 (id INT,
fake_id INT,
bigfield TINYTEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "latin1" COLLATE "latin1_bin" ;
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
CREATE TABLE t1 (id INT,
fake_id INT,
bigfield TINYTEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "binary" COLLATE "binary" ;
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
CREATE TABLE t1 (id INT,
fake_id INT,
bigfield TINYTEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "utf8" COLLATE "utf8_bin" ;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
CREATE TABLE t1 (id INT,
fake_id INT,
bigfield TINYTEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "latin1" COLLATE "latin1_swedish_ci" ;
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
set session debug= "+d,myrocks_enable_unknown_collation_index_only_scans";
CREATE TABLE t1 (id INT,
fake_id INT,
bigfield TINYTEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "utf8" COLLATE "utf8_general_ci" ;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
set session debug= "-d,myrocks_enable_unknown_collation_index_only_scans";

#Text Covering Indexes

CREATE TABLE t1 (id INT,
fake_id INT,
bigfield TEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "latin1" COLLATE "latin1_bin" ;
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
CREATE TABLE t1 (id INT,
fake_id INT,
bigfield TEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "binary" COLLATE "binary" ;
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
CREATE TABLE t1 (id INT,
fake_id INT,
bigfield TEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "utf8" COLLATE "utf8_bin" ;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
CREATE TABLE t1 (id INT,
fake_id INT,
bigfield TEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "latin1" COLLATE "latin1_swedish_ci" ;
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
set session debug= "+d,myrocks_enable_unknown_collation_index_only_scans";
CREATE TABLE t1 (id INT,
fake_id INT,
bigfield TEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "utf8" COLLATE "utf8_general_ci" ;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
set session debug= "-d,myrocks_enable_unknown_collation_index_only_scans";

#MEDIUMTEXT Covering Indexes

CREATE TABLE t1 (id INT,
fake_id INT,
bigfield MEDIUMTEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "latin1" COLLATE "latin1_bin" ;
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
CREATE TABLE t1 (id INT,
fake_id INT,
bigfield MEDIUMTEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "binary" COLLATE "binary" ;
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
CREATE TABLE t1 (id INT,
fake_id INT,
bigfield MEDIUMTEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "utf8" COLLATE "utf8_bin" ;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
CREATE TABLE t1 (id INT,
fake_id INT,
bigfield MEDIUMTEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "latin1" COLLATE "latin1_swedish_ci" ;
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
set session debug= "+d,myrocks_enable_unknown_collation_index_only_scans";
CREATE TABLE t1 (id INT,
fake_id INT,
bigfield MEDIUMTEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "utf8" COLLATE "utf8_general_ci" ;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
set session debug= "-d,myrocks_enable_unknown_collation_index_only_scans";

#LONGTEXT Covering Indexes

CREATE TABLE t1 (id INT,
fake_id INT,
bigfield LONGTEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "latin1" COLLATE "latin1_bin" ;
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
CREATE TABLE t1 (id INT,
fake_id INT,
bigfield LONGTEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "binary" COLLATE "binary" ;
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
CREATE TABLE t1 (id INT,
fake_id INT,
bigfield LONGTEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "utf8" COLLATE "utf8_bin" ;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
CREATE TABLE t1 (id INT,
fake_id INT,
bigfield LONGTEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "latin1" COLLATE "latin1_swedish_ci" ;
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
set session debug= "+d,myrocks_enable_unknown_collation_index_only_scans";
CREATE TABLE t1 (id INT,
fake_id INT,
bigfield LONGTEXT,
PRIMARY KEY (id),
KEY bf (bigfield(32)),
KEY fid (fake_id, bigfield(32))
) ENGINE=rocksdb CHARACTER SET "utf8" COLLATE "utf8_general_ci" ;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES (0, 1000, ''),
(1, 1001, REPEAT('a', 1)),
(8, 1008, REPEAT('b', 8)),
(24, 1024, REPEAT('c', 24)),
(30, 1030, REPEAT(' ', 30)),
(31, 1031, REPEAT('d', 31)),
(32, 1032, REPEAT('x', 32)),
(33, 1033, REPEAT('y', 33)),
(34, 1034, REPEAT(' ', 34)),
(128, 1128, REPEAT('z', 128));
SELECT id, bigfield FROM t1 IGNORE INDEX(fid) ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id <= 1032 ORDER BY fake_id;
id	bigfield
0	
1	a
8	bbbbbbbb
24	cccccccccccccccccccccccc
30	                              
31	ddddddddddddddddddddddddddddddd
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Eligible for covering index optimization: 7 rocksdb_covered_secondary_key_lookups]
# Not eligible for covering index optimization
SELECT id, bigfield FROM t1 FORCE INDEX(fid) WHERE fake_id > 1032 ORDER BY fake_id;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
34	                                  
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Not eligible for covering index optimization: 0 rocksdb_covered_secondary_key_lookups]
DROP TABLE t1;
set session debug= "-d,myrocks_enable_unknown_collation_index_only_scans";
SET GLOBAL ROCKSDB_PAUSE_BACKGROUND_WORK = @ORIG_PAUSE_BACKGROUND_WORK;
