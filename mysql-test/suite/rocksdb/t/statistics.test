--source include/have_rocksdb.inc

let $save_rocksdb_seconds_between_stat_computes = `SELECT @@rocksdb_seconds_between_stat_computes`;
SET GLOBAL rocksdb_seconds_between_stat_computes=2;

--disable_warnings
DROP TABLE IF EXISTS t1;
DROP TABLE IF EXISTS t2;
DROP TABLE IF EXISTS t3;
DROP TABLE IF EXISTS t4;
DROP TABLE IF EXISTS t5;
--enable_warnings

create table t1(id bigint not null primary key auto_increment, a varchar(255) not null, b bigint) engine=rocksdb;
--disable_query_log
let $i=0;
while ($i<100000)
{
  inc $i;
  eval insert t1(a,b) values(concat('a',$i,'b',$i,'c',$i), $i);
}
--enable_query_log

create table t2(id bigint not null primary key auto_increment, a varchar(255) not null, b bigint) engine=rocksdb;
insert t2(a, b) select a, b from t1;

create table t3(id bigint not null primary key auto_increment, a varchar(255) not null, b bigint) engine=rocksdb;
insert t3(a, b) select a, b from t1;

create table t4(id bigint not null primary key auto_increment, a varchar(255) not null, b bigint) engine=rocksdb;
insert t4(a, b) select a, b from t1;

# smaller table to test number of rows stats
create table t5(id bigint not null primary key auto_increment, a varchar(255) not null, b bigint) engine=rocksdb;
insert t5(a, b) select a, b from t1 where id < 50000;

create index t1_1 on t1(b);
create index t3_1 on t3(b) comment 'cf_t3';
create index t4_1 on t4(b) comment 'rev:cf_t4';

# should have some statistics before the memtable flush
SELECT table_name, table_rows FROM information_schema.tables WHERE table_schema = DATABASE();

# flush and get even better statistics
set global rocksdb_force_flush_memtable_now = true;
SELECT table_name, table_rows FROM information_schema.tables WHERE table_schema = DATABASE();

create index t4_2 on t4(a);
set global rocksdb_force_flush_memtable_now = true;

SELECT table_name, table_rows FROM information_schema.tables WHERE table_schema = DATABASE();

# restart the server, check the stats
--sleep 1 # to make sure that stats are saved
--source include/restart_mysqld.inc

SELECT table_name, table_rows FROM information_schema.tables WHERE table_schema = DATABASE();

# output a bookmark into the log file
--exec echo rocksdb_statistics_test_bookmark >> $MYSQLTEST_VARDIR/log/mysqld.1.err

analyze table t1,t2,t3,t4,t5;

# make sure that analyze table actually did something
--perl
# Read all lines in the log file after the bookmark
open FILE, "$ENV{'MYSQLTEST_VARDIR'}/log/mysqld.1.err" or die;
while(my $line=<FILE>) {
  if ($line eq "rocksdb_statistics_test_bookmark\n") {
    @List = ();
  }
  push @List, $line;
}
# filter out certain log lines
foreach $line (@List) {
  if ($line =~ /Recomputed stats for \d+ indexes across \d+ files/) {
    print "$&\n";
  }
}
EOF

# make sure that stats do not change after calling analyze table
SELECT table_name, table_rows FROM information_schema.tables WHERE table_schema = DATABASE();

drop table t1;
drop table t2;
drop table t3;
drop table t4;
drop table t5;

eval SET GLOBAL rocksdb_seconds_between_stat_computes = $save_rocksdb_seconds_between_stat_computes;
