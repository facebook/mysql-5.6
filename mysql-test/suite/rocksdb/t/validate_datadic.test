--source include/have_rocksdb.inc

# skip validate_datadic test for rocksdb DD
# With rocksdb DD, table metadata lives in rocksdb
# update mysql.ibd file won't get these error message
--source include/have_innodb_ddse.inc

#
# Validate that the server starts when everything is okay, but detects errors
# if a table exists in the RocksDB data dictionary but not in the MySQL data
# dictionary or vice versa.
# The default mode causes these failures to keep the server from starting, but
# this is problematic for the test as a server start failure is not easily
# trappable.  Instead use the mode where it will detect the problem and report
# it in the log bug still start:  --rocksdb_validate_tables=2
#

CALL mtr.add_suppression("Schema mismatch - Table test\.t.+ is registered in RocksDB but does not have a corresponding DD table");
CALL mtr.add_suppression("Schema mismatch - A DD table exists for table test\.t1, but that table is not registered in RocksDB");

--let $MYSQLD_DATADIR= `select @@datadir`

# Shut down and save MySQL DD without tables
--source include/shutdown_mysqld.inc
--copy_file $MYSQLD_DATADIR/mysql.ibd $MYSQL_TMP_DIR/mysql.ibd.no_tables

# Restart the server
--let $restart_parameters=
--source include/start_mysqld.inc

CREATE TABLE t1 (pk int primary key) ENGINE=ROCKSDB;
CREATE TABLE t2 (pk int primary key) ENGINE=ROCKSDB PARTITION BY KEY(pk) PARTITIONS 4;

# Shut down, save MySQL DD with t1 and t2 tables, and replace MySQL DD with no tables
--source include/shutdown_mysqld.inc
--copy_file $MYSQLD_DATADIR/mysql.ibd $MYSQL_TMP_DIR/mysql.ibd.t1_t2
--move_file $MYSQL_TMP_DIR/mysql.ibd.no_tables $MYSQLD_DATADIR/mysql.ibd

# Restart the server
--let $restart_parameters=restart:--rocksdb_validate_tables=2
--source include/start_mysqld.inc

--let $assert_file= $MYSQLTEST_VARDIR/log/mysqld.1.err
--let $assert_only_after = CURRENT_TEST: rocksdb.validate_datadic
--let $assert_count = 2
--let $assert_select = Schema mismatch - Table test\.t.+ is registered in RocksDB but does not have a corresponding DD table
--let $assert_text = Expect 2 warnings that we are missing two DD tables
--source include/assert_grep.inc

# Shut down and replace MySQL DD with t1 and t2 tables
--source include/shutdown_mysqld.inc
--remove_file $MYSQLD_DATADIR/mysql.ibd
--copy_file $MYSQL_TMP_DIR/mysql.ibd.t1_t2 $MYSQLD_DATADIR/mysql.ibd

# Restart the server
--source include/start_mysqld.inc

DROP TABLE t1;

# Shut down and replace MySQL DD with t1 and t2 tables (RocksDB DD has t1 removed now)
--source include/shutdown_mysqld.inc
--move_file $MYSQL_TMP_DIR/mysql.ibd.t1_t2 $MYSQLD_DATADIR/mysql.ibd

# Restart the server
--source include/start_mysqld.inc

--let $assert_file= $MYSQLTEST_VARDIR/log/mysqld.1.err
--let $assert_only_after = CURRENT_TEST: rocksdb.validate_datadic
--let $assert_count = 1
--let $assert_select = Schema mismatch - A DD table exists for table test\.t1, but that table is not registered in RocksDB
--let $assert_text = Expect 1 warning that we are missing one RocksDB table
--source include/assert_grep.inc

DROP TABLE t2;

--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

--let $assert_text = The "test" database should have no tables in MySQL DD
--let $assert_cond = [SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = "test"] = 0
--source include/assert.inc

# db/table contains special character
CREATE DATABASE `a-b`;
CREATE TABLE `548eea1a-277f-414b-915d-913dc5ae5f3a` (a int) ENGINE=ROCKSDB;
--let $restart_parameters=
--source include/restart_mysqld.inc
DROP TABLE `548eea1a-277f-414b-915d-913dc5ae5f3a`;
DROP DATABASE `a-b`;
