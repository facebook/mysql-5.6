--source include/have_debug.inc
--source include/not_valgrind.inc
--source include/not_asan.inc
--source include/not_parallel.inc
--source include/have_rocksdb.inc
--source suite/rocksdb/include/have_write_committed.inc

let DATADIR_LOCATION=$MYSQLTEST_VARDIR/mysqld.1/data;

SET SESSION debug="+d, simulate_corrupt_data_read";
	
CREATE DATABASE a;
USE a;
CREATE TABLE t1 (a INT PRIMARY KEY, b CHAR(8)) ENGINE=rocksdB;

INSERT INTO t1 VALUES (3, 'bar');
INSERT INTO t1 VALUES (4, 'bar');

--echo read

--echo fail query
SET GLOBAL rocksdb_corrupt_data_action = ERROR;
--error 1296
select * from t1;

--echo fail server
SET GLOBAL rocksdb_corrupt_data_action = ABORT_SERVER;
--error 0,CR_SERVER_LOST,ER_INTERNAL_ERROR,1296
select * from t1;

--remove_file $DATADIR_LOCATION/.rocksdb/ROCKSDB_CORRUPTED

--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--enable_reconnect
let $WAIT_COUNT=6000;
--source include/wait_time_until_connected_again.inc

SET SESSION debug="+d, simulate_corrupt_data_read";

--echo pass query with warning
SET GLOBAL rocksdb_corrupt_data_action = WARNING;
select * from t1;

SET SESSION debug="-d, simulate_corrupt_data_read";

--echo write

USE a;
CREATE table t2 (
  pk0 int primary key auto_increment,
  sk int,
  val int default 0,
  unique(sk)
) engine=rocksdb;

insert into t2 (sk) values (1), (2);

SET SESSION debug="+d, simulate_corrupt_data_update";

--echo fail query
SET GLOBAL rocksdb_corrupt_data_action = ERROR;
--error 1296
insert into t2 (sk) values (1), (2) on duplicate key update val = val + 1;

--echo fail server
SET GLOBAL rocksdb_corrupt_data_action = ABORT_SERVER;
--error 0,CR_SERVER_LOST,ER_INTERNAL_ERROR,1296
insert into t2 (sk) values (1), (2) on duplicate key update val = val + 1;

--remove_file $DATADIR_LOCATION/.rocksdb/ROCKSDB_CORRUPTED

--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--enable_reconnect
let $WAIT_COUNT=6000;
--source include/wait_time_until_connected_again.inc

SET SESSION debug="+d, simulate_corrupt_data_update";

--echo pass query with warning
SET GLOBAL rocksdb_corrupt_data_action = WARNING;
insert into t2 (sk) values (1), (2) on duplicate key update val = val + 1;

SET SESSION debug="-d, simulate_corrupt_data_update";

select * from t2;

DROP database a;

SET GLOBAL rocksdb_corrupt_data_action = default;
