source include/not_embedded.inc;
source include/have_innodb.inc;
source include/have_debug.inc;

--disable_warnings
drop table if exists t1;
drop table if exists t2;
--enable_warnings

-- let $innodb_page_size= `SELECT @@innodb_page_size`

#
# Tests the primary key IO stats works
#

CREATE TABLE t1 (a int not null primary key, b int) engine=innodb;
create index SECONDARY on t1(b);

insert into t1 values (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6);

select count(*) from t1;

--echo # Can't Clear innodb page cache, so restart mysqld to generate reads
--source include/restart_mysqld.inc
flush statistics;

select * from t1 where a=1;

--replace_result $innodb_page_size PAGE_SIZE
eval select
IO_READ_BYTES_PRIMARY DIV $innodb_page_size,
IO_READ_REQUESTS_PRIMARY, IO_READ_SLOW_IOS_PRIMARY,
IO_READ_BYTES_SECONDARY, IO_READ_REQUESTS_SECONDARY, IO_READ_SLOW_IOS_SECONDARY
from information_schema.table_statistics where table_name like 't1%';

--replace_result $innodb_page_size PAGE_SIZE
eval select
DISK_READ_BYTES_PRIMARY DIV $innodb_page_size, DISK_READ_REQUESTS_PRIMARY,
DISK_READ_BYTES_SECONDARY, DISK_READ_REQUESTS_SECONDARY
from information_schema.user_statistics where
USER_NAME=substring_index(user(),'@',1);

#
# Tests the primary key and secondary index IO stats of system tables are not collected
#
CREATE TABLE t2 (a int not null primary key, b blob) engine=innodb;

delimiter //;
create procedure insert_rows (loops int)
begin
  declare v1 int default 0;
  while v1 < loops do
    insert into t2 values (v1, repeat("t", 100 * 1000));
    set v1 = v1 + 1;
    end while;
end//
delimiter ;//

delimiter //;
create procedure select_rows (loops int)
begin
  declare v1 int default 0;
  while v1 < loops do
    select * from t2 where a=v1;
    set v1 = v1 + 1;
    end while;
end//
delimiter ;//

--disable_result_log
call insert_rows(100);
select count(*) from t2;
--enable_result_log
--echo # Can't Clear innodb page cache, so restart mysqld to generate reads
--source include/restart_mysqld.inc
--disable_result_log
flush statistics;
call select_rows(100);
--enable_result_log

drop table t1;
drop table t2;
drop procedure insert_rows;
drop procedure select_rows;

--echo # The primary key and secondary index IO stats should all be zeros
select
IO_READ_BYTES_PRIMARY, IO_READ_REQUESTS_PRIMARY, IO_READ_SLOW_IOS_PRIMARY,
IO_READ_BYTES_SECONDARY, IO_READ_REQUESTS_SECONDARY, IO_READ_SLOW_IOS_SECONDARY
from information_schema.table_statistics where table_name like 'system%';
