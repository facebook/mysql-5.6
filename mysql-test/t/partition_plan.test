SET @start_session_value = @@session.part_scan_max;

create table tp (c1 int, c2 int, c3 int, c4 int, part_key int,
primary key (c1, part_key), index(c2)
) engine=innodb
PARTITION BY RANGE(part_key)(
PARTITION p1 VALUES LESS THAN (100),
PARTITION p2 VALUES LESS THAN (200),
PARTITION p3 VALUES LESS THAN (300),
PARTITION p4 VALUES LESS THAN (400),
PARTITION p5 VALUES LESS THAN (500),
PARTITION p6 VALUES LESS THAN (600),
PARTITION p7 VALUES LESS THAN (700),
PARTITION p8 VALUES LESS THAN (800),
PARTITION p9 VALUES LESS THAN (900),
PARTITION p10 VALUES LESS THAN (1000),
PARTITION p11 VALUES LESS THAN (1100),
PARTITION p12 VALUES LESS THAN (1200),
PARTITION p13 VALUES LESS THAN (1300),
PARTITION p14 VALUES LESS THAN (1400)
);
--disable_query_log
let $i=1;
while($i <= 1000)
{
  eval insert into tp values ($i,$i,$i,$i,$i);
  inc $i;
}
--enable_query_log

--echo Simple example.
explain partitions select count(*) from tp where c2 < 300 and part_key > 100 and part_key < 200;

--echo Basic estimate stats.
explain partitions select count(*) from tp where c2 < 700 and part_key > 100 and part_key < 1500;

--echo Fully accurate stats.
set session part_scan_max=20;
explain partitions select count(*) from tp where c2 < 700 and part_key > 100 and part_key < 1500;

--echo Bad estimate stats.
set session part_scan_max=5;
explain partitions select count(*) from tp where c2 < 700 and part_key > 100 and part_key < 200;

drop table tp;

SET @@session.part_scan_max = @start_session_value;
